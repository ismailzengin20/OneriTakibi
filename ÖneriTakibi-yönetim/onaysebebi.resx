<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="b_onayla.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAcVSURBVEhLhZYLVJP3Gcb/olY7R+u0LYrWS60tZVVI
        rZ2KEG7BKjcT7pAoalUyO89OqyKgeAGtqKDCLE6ZczJQEJBBh66giNip9FBIQoAQroZcCAnhjpe2z94P
        qNvO3Ol3zj+Xk+88v7y35/2YQqFkcnkda2pUs2ZVC2tqULPa2jqm69CyOnm9dVe7blu/rifbrDUp9BqD
        Sa/Rm7s7jcpebU+uvlX3Kd0zU9veyWSyOqZubGYtqtZRDU6T034hQF6rtO7VmnIMnQZcKL8O//PRWHpc
        gvkJQiw8KoLjSTECM2JwqbIYHR2d6NF0Fylkytd+FtBCgNbGFv+h7j6cuJmJGXFrwT5fDrbfCdOOeeCN
        lDWYk7oWtmc8sSD1Y7yb6o8PUiNwqiwLJp0ZbapWSauq7cUAjv5I3bHDoO8C/5QU7HcOeDnREzan/TD7
        SyEWZIhgd1kEXnYAPswVYV3xZgSUbIcgbyPeO+eD9Zmfo7n9ETRNj2LVDc3/C2hravXV6wyYG+cD9tlH
        eP24H2Zx4mf9YXthPRZdEsH+SgB4eYFYURQAYdlWhJRLEXJ7O0JuRcElPwhuf/4EimY1WhpbNjwHyBX0
        QV439bF5CLxjG8E2LcSUgx6wSfaDzRnu3/tjDgHe/osIv74SCB4JrSoKQhAJh90ZO+EV9F65DbysNYgp
        OIU+Qy9I8w0OQuJK1q+z5CXfyASLeBNsrzPl3Bkvf+EJ27T1mJ1OgIxxwFWKgABOxcEILo9C6DggoHwT
        3ArWo6CmELuuH0XizQxQl91SKuoZtaJyWk+XGVN/7wK2g4cJsc6YcJAPluAM62QB5p4T4s0MId6m/HMA
        x/wAOBeHEUCKsAop/G6J4ZEjQrW6BvdVVfgoyxsfpkegrV2DBkXDDGZo10v/eq8ETPwW2C6nUQAjwKQj
        rpiY5ALrVC/M+9M4gFLEAfh/FyOkYgc8bwRDdE0CrVGL/p4+eOUHwr9sC+zO+iHzmxIY2vTxbKir/4ow
        fQ/YxsWw2kPicRTJIQIcdcVLJ9wwOcUNr5z1wiJK0ZIrQaMA9xsSuBQKse1vn2F4cATcFVawFT6l4ZSy
        KCy/FIxNWQmwdJrL2UC3RWl/KBRs6/uwil6NibGUnr3LwPY5giWtxtQz7vjFWQ+8lrEG9pSiJflCvHPZ
        A0fKU4EfR7Wxv/QI3L4SIeKuFKHl2+F6VQz3L6Xo0nS1MIvBbJ4b6wu2nQR3r8T0WHfEXEyBd8qnmBLn
        RBHZgx1dipfSV+OXF5xgfZqHS1W5Y8p05dUWYXW+D8LujhWca1tBXiRWpEVCp9GZWL/RYpoX50+ApRQB
        pWj3MiyO94f6YQM0ilakF2dhS/YB2CZ7YkqCA24q7o5LA026Frjl+COoYsvzlh0F5EZiZdomAuhNbLh7
        oJGXKAHbYg+r3VyLUg2il+LVaD6q73+HZ/pBwPIUI72DMBgN49LAk+EnWHs1FOvKwiGuiELEHeoqAnAp
        cskWw/Pcb2HsNLaxIWP/tQ0XD4BJFsFqF7VoHEEOu1ENHPCrGD4eflMFk8aIvt5+4HtSHs+7tCgaHxQI
        4H1bTK0qQcDtzTQX2xB6OwrLLgZBmpOEPr2lgunbtDtLvrtHQ7aIjG0lJsQQ5AAfVl+4Urs6Yma8Ox7+
        81uYO7vRO0AQutIrL8Muiw9vmgGfMjFFwZ1w+h6BtSUSzKLuu/agDDQCCUwuU04fsQxiVvQ6qsMSWO2l
        FMW7YGKiKyad8KAC8/D6QTc8uFcFPAZK5ZWwPbcCgq8j4F06Bvjp+NJZQUZofzIQBq0RSnn9bDI6JevT
        mb/KffA1WPg8sD2rMGEcMDnJDVNPe4Id58HupB/uf1uF+WmusMv7GL6lG+H9H+I+lCpfimhWqjPOVxRi
        QN97v46zCplMQRtM/ioGv4foj3upFgTZ5wKrBD4mHyNACjcH1EF/WIVX0pxgk+mM5UVCGqoNzwGcsLBC
        DPtsAYIzY/DEPAK5TDFv1Oy4Fw7S1NAU8WzgMX6TtBkscj7YAWdMOuaOKQSYluaJGRcEmH2ZJjpnDRyv
        +xKAIiBh3zIJgSJgl+kBQUYUzMZezq53/tuuxwGNDSrWqmqN/WHgKcIy9pNtLyBvcqBiUxSnPDA9XQDb
        i15YmCnA+znr4FUsgWdhOBwzfcna+dhAs9Jr7EOHuj2Z244vBKhVzaxRqYrE0I8orL6D9w4Fk4UsBtv5
        DliMA3nUclgl0klYhplJrph+mI+VqZuR+7AMP/Q+BW3FnS1NtJP/H6CZAPXKRlZTI5tj0Zn+8azvMSrr
        qxFfeB4up6WwSwjBu4m0cJI/weHiDFTUVWPQNMB5f2VNrfyt0b3+c4CGehWrqZUxg8ZAxVfYaNu0+0aM
        /aXPLMPNI+bB7mHzoOmJebh5yNh3i347TI8rc42aLlYjk489OPwXQMn+BbZomyP2FETQAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="b_iptal.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>